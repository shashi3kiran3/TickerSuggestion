{
  "version": 3,
  "sources": ["../../../functions/ai.ts", "../../../functions/api/chart.ts", "../../../functions/api/ipos.ts", "../../../functions/api/news.ts", "../../../functions/api/quote.ts", "../../../functions/api/read.ts", "../../../functions/api/screener-saved.ts", "../../../functions/api/trending.ts", "../../../functions/chart.ts", "../pages-Z5DQ4K/functionsRoutes-0.9547510463415301.mjs", "../../../node_modules/wrangler/node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-XNDw0E/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-XNDw0E/middleware-loader.entry.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-jzTFfC/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-jzTFfC/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/dev-gyfwux",
  "sourcesContent": ["export const onRequestPost: PagesFunction<{\n  OPENAI_API_KEY: string\n}> = async (context) => {\n  const { request, env } = context\n  try {\n    const apiKey = env.OPENAI_API_KEY\n    if (!apiKey) {\n      return new Response(JSON.stringify({ error: 'Missing OPENAI_API_KEY' }), {\n        status: 500,\n        headers: { 'content-type': 'application/json' },\n      })\n    }\n\n    const payload = await request.json<any>()\n    const model = payload?.model || 'gpt-4o-mini'\n    const messages = payload?.messages\n    const response_format = payload?.response_format\n    const temperature = typeof payload?.temperature === 'number' ? payload.temperature : 0.3\n\n    if (!Array.isArray(messages)) {\n      return new Response(JSON.stringify({ error: 'messages array required' }), {\n        status: 400,\n        headers: { 'content-type': 'application/json' },\n      })\n    }\n\n    const resp = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({ model, messages, response_format, temperature }),\n    })\n\n    const text = await resp.text()\n    return new Response(text, {\n      status: resp.status,\n      headers: { 'content-type': 'application/json' },\n    })\n  } catch (e) {\n    return new Response(JSON.stringify({ error: 'proxy_error' }), {\n      status: 500,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\n\n", "export const onRequestGet: PagesFunction<{ ALPHA_VANTAGE_KEY?: string }> = async ({ request, env }) => {\n  try {\n    const url = new URL(request.url)\n    const symbol = url.searchParams.get('symbol') || 'SPY'\n    const range = url.searchParams.get('range') || '2y'\n    const interval = url.searchParams.get('interval') || '1d'\n\n    // Cache first\n    const cache = caches.default\n    const cacheKey = new Request(request.url, { method: 'GET' })\n    const cached = await cache.match(cacheKey)\n    if (cached) return cached\n\n    const headers = {\n      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36',\n      accept: 'application/json, text/plain, */*',\n      referer: 'https://finance.yahoo.com/',\n      'accept-language': 'en-US,en;q=0.9',\n    }\n\n    // Try Yahoo chart first\n    const ep = `https://query1.finance.yahoo.com/v8/finance/chart/${encodeURIComponent(\n      symbol,\n    )}?range=${encodeURIComponent(range)}&interval=${encodeURIComponent(interval)}&includePrePost=false&events=div%2Csplit`\n    const resp = await fetch(ep, { headers })\n    if (resp.ok) {\n      const text = await resp.text()\n      const response = new Response(text, {\n        status: 200,\n        headers: { 'content-type': 'application/json', 'cache-control': 's-maxage=600' },\n      })\n      await cache.put(cacheKey, response.clone())\n      return response\n    }\n\n    // Fallback: Alpha Vantage TIME_SERIES_DAILY_ADJUSTED (compact)\n    const key = env.ALPHA_VANTAGE_KEY\n    if (key) {\n      const av = await fetch(\n        `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${encodeURIComponent(\n          symbol,\n        )}&outputsize=${range === '10y' || range === '5y' ? 'full' : 'compact'}&apikey=${encodeURIComponent(key)}`,\n      )\n      const data = await av.json()\n      const series = data?.['Time Series (Daily)'] || {}\n      const entries = Object.entries(series) as [string, any][]\n      entries.sort((a, b) => new Date(a[0]).getTime() - new Date(b[0]).getTime())\n      const timestamp: number[] = []\n      const open: number[] = []\n      const high: number[] = []\n      const low: number[] = []\n      const close: number[] = []\n      for (const [date, ohlc] of entries) {\n        timestamp.push(new Date(date).getTime() / 1000)\n        open.push(parseFloat(ohlc['1. open']))\n        high.push(parseFloat(ohlc['2. high']))\n        low.push(parseFloat(ohlc['3. low']))\n        close.push(parseFloat(ohlc['4. close']))\n      }\n      const payload = {\n        chart: {\n          result: [\n            {\n              timestamp,\n              indicators: { quote: [{ open, high, low, close }] },\n            },\n          ],\n        },\n      }\n      const response = new Response(JSON.stringify(payload), {\n        status: 200,\n        headers: { 'content-type': 'application/json', 'cache-control': 's-maxage=600' },\n      })\n      await cache.put(cacheKey, response.clone())\n      return response\n    }\n\n    return new Response(JSON.stringify({ chart: { result: [] }, error: 'upstream_unavailable' }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  } catch (e) {\n    return new Response(JSON.stringify({ chart: { result: [] }, error: 'proxy_error' }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\n\n", "// Fetch upcoming IPOs from Nasdaq (public calendar CSV) via server-side proxy\n// GET /api/ipos\n\nexport const onRequestGet: PagesFunction = async () => {\n  try {\n    // Nasdaq provides a downloadable IPO calendar CSV; paths occasionally change. Use a stable finance site as fallback.\n    const urls = [\n      'https://api.nasdaq.com/api/ipo/calendar',\n      'https://www.nasdaq.com/api/v3/calendar/ipos',\n    ]\n    for (const u of urls) {\n      const resp = await fetch(u, { headers: { 'user-agent': 'Mozilla/5.0', accept: 'application/json,text/csv,*/*' } })\n      if (!resp.ok) continue\n      const text = await resp.text()\n      if (text.length < 10) continue\n      return new Response(text, { status: 200, headers: { 'content-type': resp.headers.get('content-type') || 'text/plain' } })\n    }\n  } catch {}\n  return new Response(JSON.stringify({ error: 'unavailable' }), { status: 200, headers: { 'content-type': 'application/json' } })\n}\n\n\n", "// Cloudflare Pages Function: Aggregate stock-market news from multiple RSS sources\n// GET /api/news?page=1&pageSize=10&q=tesla&source=CNBC\n\ntype NewsItem = {\n  id: string\n  title: string\n  url: string\n  source: string\n  publishedAt?: string\n  description?: string\n}\n\nexport const onRequestGet: PagesFunction = async ({ request }) => {\n  try {\n    const url = new URL(request.url)\n    const page = Math.max(1, parseInt(url.searchParams.get('page') || '1'))\n    const pageSize = Math.min(25, Math.max(1, parseInt(url.searchParams.get('pageSize') || '10')))\n    const q = (url.searchParams.get('q') || '').trim().toLowerCase()\n    const sourceFilter = (url.searchParams.get('source') || '').trim()\n    const perSource = Math.min(20, Math.max(3, parseInt(url.searchParams.get('perSource') || '12')))\n\n    const headers = {\n      'user-agent':\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36',\n      accept: 'application/rss+xml, application/xml, text/xml, */*',\n    }\n\n    // Edge cache\n    const cache = caches.default\n    const cacheKey = new Request(`https://news-cache.invalid${q ? `?q=${encodeURIComponent(q)}` : ''}`, {\n      method: 'GET',\n    })\n    // Cache whole aggregate for 60s; paging is derived from cached set\n    const cached = await cache.match(cacheKey)\n    let items: NewsItem[]\n    if (cached) {\n      items = (await cached.json()) as NewsItem[]\n    } else {\n      const feeds = [\n        { name: 'CNBC', url: 'https://www.cnbc.com/id/10001147/device/rss/rss.html' }, // Markets\n        { name: 'Reuters', url: 'https://feeds.reuters.com/reuters/businessNews' },\n        { name: 'Yahoo Finance', url: 'https://feeds.finance.yahoo.com/rss/2.0/headline?s=%5EGSPC&region=US&lang=en-US' },\n        { name: 'MarketWatch', url: 'https://www.marketwatch.com/feeds/topstories' },\n        { name: 'Nasdaq', url: 'https://www.nasdaq.com/feed/rssoutbound?category=Stock-Market-News' },\n        { name: 'Seeking Alpha', url: 'https://seekingalpha.com/market_currents.xml' },\n        { name: 'Financial Times', url: 'https://www.ft.com/rss/home' },\n        { name: 'TheStreet', url: 'https://www.thestreet.com/.rss/full/' },\n        { name: 'Investing.com', url: 'https://www.investing.com/rss/news.rss' },\n        { name: 'PR Newswire', url: 'https://www.prnewswire.com/rss/all-news.rss' },\n        { name: 'Business Wire', url: 'https://www.businesswire.com/portal/site/home/rss/' },\n        { name: 'SEC', url: 'https://www.sec.gov/news/pressreleases.rss' },\n      ]\n      // Add a Google News RSS feed: query-specific if q provided; otherwise general stock market\n      const gq = q ? q : 'stock market'\n      feeds.push({\n        name: 'Google News',\n        url: `https://news.google.com/rss/search?q=${encodeURIComponent(gq)}&hl=en-US&gl=US&ceid=US:en`,\n      })\n      const results = await Promise.allSettled(\n        feeds.map(async (f) => {\n          const text = await fetchWithTimeout(f.url, { headers }, 7000)\n          const parsed = parseRss(text, f.name)\n          return parsed.slice(0, perSource)\n        }),\n      )\n      let all = results.flatMap((r) => (r.status === 'fulfilled' ? r.value : []))\n\n      // If query contains a ticker-like symbol, enrich with StockTwits posts\n      const mTicker = /\\b[A-Z]{1,5}\\b/.exec(q || '')\n      if (mTicker) {\n        const sym = mTicker[0]\n        try {\n          const st = await fetchWithTimeout(\n            `https://api.stocktwits.com/api/2/streams/symbol/${encodeURIComponent(sym)}.json`,\n            { headers: { 'user-agent': headers['user-agent'] } },\n            4000,\n          )\n          const data = JSON.parse(st)\n          const msgs = (data?.messages || []).slice(0, perSource)\n          const mapped: NewsItem[] = msgs.map((m: any) => ({\n            id: hash(`st_${m.id}`),\n            title: (m?.body || '').slice(0, 140),\n            url: m?.entities?.links?.[0]?.url || `https://stocktwits.com/${m?.user?.username || ''}/message/${m?.id}`,\n            source: 'StockTwits',\n            publishedAt: m?.created_at,\n            description: m?.body || undefined,\n          }))\n          all = all.concat(mapped)\n        } catch {}\n      }\n      items = rankAndDedupe(filterStockMarket(all))\n      await cache.put(\n        cacheKey,\n        new Response(JSON.stringify(items), {\n          status: 200,\n          headers: { 'content-type': 'application/json', 'cache-control': 's-maxage=60' },\n        }),\n      )\n    }\n\n    let filtered = items\n    if (sourceFilter && sourceFilter !== 'All') filtered = filtered.filter((i) => i.source === sourceFilter)\n    if (q) filtered = filtered.filter((i) => i.title.toLowerCase().includes(q))\n\n    const total = filtered.length\n    const start = (page - 1) * pageSize\n    const end = Math.min(start + pageSize, total)\n    const pageItems = filtered.slice(start, end)\n\n    return new Response(JSON.stringify({ items: pageItems, total }), {\n      status: 200,\n      headers: { 'content-type': 'application/json', 'cache-control': 'no-store' },\n    })\n  } catch (e) {\n    return new Response(JSON.stringify({ items: [], total: 0 }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\nfunction parseRss(xml: string, source: string): NewsItem[] {\n  const items: NewsItem[] = []\n  const regex = /<item>([\\s\\S]*?)<\\/item>/gi\n  let m: RegExpExecArray | null\n  while ((m = regex.exec(xml))) {\n    const block = m[1]\n    const rawTitle = extract(block, 'title')\n    const title = sanitizeRss(rawTitle || '', false)\n    const link = extract(block, 'link')\n    const pubDate = extract(block, 'pubDate')\n    const rawDesc = extract(block, 'description') || extract(block, 'content:encoded')\n    const desc = rawDesc ? sanitizeRss(rawDesc, true) : null\n    if (!title || !link) continue\n    items.push({ id: hash(link), title, url: link, source, publishedAt: pubDate || undefined, description: desc || undefined })\n  }\n  return items\n}\n\nfunction extract(block: string, tag: string): string | null {\n  const m = new RegExp(`<${tag}>([\\\\s\\\\S]*?)<\\\\/${tag}>`, 'i').exec(block)\n  if (!m) return null\n  return decodeHtml(m[1].trim())\n}\n\nfunction decodeHtml(s: string): string {\n  return s\n    .replace(/<!\\[CDATA\\[/g, '')\n    .replace(/]]>/g, '')\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\")\n}\n\nfunction sanitizeRss(s: string, stripTags: boolean): string {\n  let out = decodeHtml(s || '')\n  if (stripTags) {\n    out = out\n      .replace(/<script[\\s\\S]*?<\\/script>/gi, ' ')\n      .replace(/<style[\\s\\S]*?<\\/style>/gi, ' ')\n      .replace(/<[^>]+>/g, ' ')\n  }\n  return out.replace(/\\s+/g, ' ').trim()\n}\n\nfunction rankAndDedupe(items: NewsItem[]): NewsItem[] {\n  const seen = new Set<string>()\n  const out: NewsItem[] = []\n  for (const it of items) {\n    if (!it.url || seen.has(it.url)) continue\n    seen.add(it.url)\n    out.push(it)\n  }\n  return out.sort((a, b) => (dateMs(b.publishedAt) - dateMs(a.publishedAt)))\n}\n\nfunction dateMs(s?: string) {\n  if (!s) return 0\n  const t = Date.parse(s)\n  return Number.isNaN(t) ? 0 : t\n}\n\nfunction filterStockMarket(items: NewsItem[]): NewsItem[] {\n  // Looser filter: general market and ticker-like words (caps 1\u20135 letters)\n  const re = /(stock|stocks|share|shares|market|wall street|fed|rates|yields|earnings|guidance|upgrade|downgrade|price target|pre[- ]?market|after[- ]?hours|nasdaq|s&p|dow|ipo|dividend|buyback|sec|fed|treasury|bond)/i\n  const tickerLike = /\\b[A-Z]{1,5}\\b/\n  return items.filter((n) => {\n    const t = n.title || ''\n    return re.test(t) || tickerLike.test(t)\n  })\n}\n\nfunction hash(s: string) {\n  let h = 0\n  for (let i = 0; i < s.length; i++) h = (Math.imul(31, h) + s.charCodeAt(i)) | 0\n  return `id_${h}`\n}\n\nasync function fetchWithTimeout(url: string, init: RequestInit, ms: number): Promise<string> {\n  const controller = new AbortController()\n  const id = setTimeout(() => controller.abort(), ms)\n  try {\n    const resp = await fetch(url, { ...init, signal: controller.signal })\n    return await resp.text()\n  } finally {\n    clearTimeout(id)\n  }\n}\n\n\n", "// Proxy Yahoo Finance quote endpoint for multiple symbols\n// GET /api/quote?symbols=AAPL,MSFT,NVDA\n\nexport const onRequestGet: PagesFunction<{ ALPHA_VANTAGE_KEY?: string }> = async ({ request, env }) => {\n  try {\n    const url = new URL(request.url)\n    const symbols = (url.searchParams.get('symbols') || '')\n      .split(',')\n      .map((s) => s.trim())\n      .filter(Boolean)\n      .slice(0, 50)\n      .join(',')\n    if (!symbols) return new Response(JSON.stringify({ quoteResponse: { result: [] } }), { status: 200 })\n\n    // Cache first\n    const cache = caches.default\n    const cacheKey = new Request(request.url, { method: 'GET' })\n    const cached = await cache.match(cacheKey)\n    if (cached) return cached\n\n    const headers = {\n      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36',\n      accept: 'application/json, text/plain, */*',\n      referer: 'https://finance.yahoo.com/',\n      'accept-language': 'en-US,en;q=0.9',\n    }\n\n    const endpoints = [\n      `https://query2.finance.yahoo.com/v7/finance/quote?symbols=${encodeURIComponent(symbols)}`,\n      `https://query1.finance.yahoo.com/v7/finance/quote?symbols=${encodeURIComponent(symbols)}`,\n    ]\n\n    for (const ep of endpoints) {\n      const resp = await fetch(ep, { headers })\n      if (resp.ok) {\n        const text = await resp.text()\n        const response = new Response(text, {\n          status: 200,\n          headers: { 'content-type': 'application/json', 'cache-control': 's-maxage=300' },\n        })\n        await cache.put(cacheKey, response.clone())\n        return response\n      }\n      // Retry next endpoint on 401/403/5xx\n      if (![401, 403, 429, 500, 502, 503].includes(resp.status)) {\n        const text = await resp.text()\n        return new Response(text, { status: resp.status, headers: { 'content-type': 'application/json' } })\n      }\n    }\n\n    // Fallback: Alpha Vantage GLOBAL_QUOTE (limited; avoid rate limit by capping to 5 symbols)\n    const key = env.ALPHA_VANTAGE_KEY\n    if (key) {\n      const syms = symbols.split(',').slice(0, 5)\n      const results: any[] = []\n      for (const s of syms) {\n        try {\n          const av = await fetch(\n            `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${encodeURIComponent(s)}&apikey=${encodeURIComponent(\n              key,\n            )}`,\n          )\n          const data = await av.json()\n          const q = data?.['Global Quote']\n          if (q) {\n            results.push({ symbol: q['01. symbol'] || s, quoteType: 'EQUITY' })\n          }\n        } catch {}\n      }\n      const response = new Response(JSON.stringify({ quoteResponse: { result: results }, source: 'alphavantage' }), {\n        status: 200,\n        headers: { 'content-type': 'application/json', 'cache-control': 's-maxage=300' },\n      })\n      await cache.put(cacheKey, response.clone())\n      return response\n    }\n\n    return new Response(JSON.stringify({ quoteResponse: { result: [] }, error: 'upstream_unavailable' }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  } catch (e) {\n    return new Response(JSON.stringify({ quoteResponse: { result: [] }, error: 'proxy_error' }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\n\n", "// Reader proxy with timeout + edge cache\n// GET /api/read?url=ENCODED_URL\n\nexport const onRequestGet: PagesFunction = async ({ request }) => {\n  try {\n    const url = new URL(request.url)\n    const target = url.searchParams.get('url') || ''\n    if (!target) return new Response('', { status: 200 })\n\n    const cache = caches.default\n    const cacheKey = new Request(request.url, { method: 'GET' })\n    const cached = await cache.match(cacheKey)\n    if (cached) return cached\n\n    const controller = new AbortController()\n    const id = setTimeout(() => controller.abort(), 5000)\n    try {\n      // Try Jina reader first\n      const readerUrl = `https://r.jina.ai/http://${target.replace(/^https?:\\/\\//, '')}`\n      const resp = await fetch(readerUrl, {\n        signal: controller.signal,\n        headers: { 'user-agent': 'Mozilla/5.0', accept: 'text/plain,*/*' },\n      })\n      if (resp.ok) {\n        const text = await resp.text()\n        const response = new Response(text || '', {\n          status: 200,\n          headers: { 'content-type': 'text/plain; charset=utf-8', 'cache-control': 's-maxage=600' },\n        })\n        await cache.put(cacheKey, response.clone())\n        return response\n      }\n    } catch {}\n    clearTimeout(id)\n\n    // Fallback: direct fetch and naive HTML strip\n    try {\n      const resp = await fetch(target, { headers: { 'user-agent': 'Mozilla/5.0' } })\n      const html = await resp.text()\n      const text = html.replace(/<script[\\s\\S]*?<\\/script>/gi, ' ').replace(/<style[\\s\\S]*?<\\/style>/gi, ' ').replace(/<[^>]+>/g, ' ').replace(/\\s+/g, ' ').trim()\n      const response = new Response(text, {\n        status: 200,\n        headers: { 'content-type': 'text/plain; charset=utf-8', 'cache-control': 's-maxage=600' },\n      })\n      await cache.put(cacheKey, response.clone())\n      return response\n    } catch {}\n\n    return new Response('', { status: 200 })\n  } catch {\n    return new Response('', { status: 200 })\n  }\n}\n\n\n", "// Proxy Yahoo Finance predefined screener\n// GET /api/screener-saved?scrIds=most_volatile&count=50\n\nexport const onRequestGet: PagesFunction = async ({ request }) => {\n  try {\n    const url = new URL(request.url)\n    const scrIds = url.searchParams.get('scrIds') || 'most_actives'\n    const count = url.searchParams.get('count') || '50'\n    const yf = `https://query1.finance.yahoo.com/v1/finance/screener/predefined/saved?count=${encodeURIComponent(\n      count,\n    )}&scrIds=${encodeURIComponent(scrIds)}`\n    const resp = await fetch(yf, { headers: { 'user-agent': 'Mozilla/5.0' } })\n    const text = await resp.text()\n    return new Response(text, { status: resp.status, headers: { 'content-type': 'application/json' } })\n  } catch (e) {\n    return new Response(JSON.stringify({ quotes: [] }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\n\n", "// Returns list of trending tickers from Yahoo Finance\n// GET /api/trending?region=US&count=25\n\nexport const onRequestGet: PagesFunction = async ({ request }) => {\n  try {\n    const url = new URL(request.url)\n    const region = url.searchParams.get('region') || 'US'\n    const count = url.searchParams.get('count') || '25'\n    const yf = `https://query1.finance.yahoo.com/v1/finance/trending/${encodeURIComponent(region)}?count=${encodeURIComponent(\n      count,\n    )}`\n    const resp = await fetch(yf, { headers: { 'user-agent': 'Mozilla/5.0' } })\n    if (!resp.ok) return new Response(JSON.stringify({ symbols: [] }), { status: 200 })\n    const data = await resp.json<any>()\n    const lists = data?.finance?.result || []\n    const symbols: string[] = []\n    for (const l of lists) {\n      for (const q of l?.quotes || []) {\n        if (q?.symbol) symbols.push(q.symbol)\n      }\n    }\n    const uniq = Array.from(new Set(symbols))\n    return new Response(JSON.stringify({ symbols: uniq }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  } catch (e) {\n    return new Response(JSON.stringify({ symbols: [] }), {\n      status: 200,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\n\n", "// Fetch daily candles from Yahoo Finance chart API (server-side to avoid CORS)\n// GET /api/chart?symbol=SPY&range=2y&interval=1d\n\nexport const onRequestGet: PagesFunction = async ({ request }) => {\n  try {\n    const url = new URL(request.url)\n    const symbol = url.searchParams.get('symbol') || 'SPY'\n    const range = url.searchParams.get('range') || '2y'\n    const interval = url.searchParams.get('interval') || '1d'\n\n    const yf = `https://query1.finance.yahoo.com/v8/finance/chart/${encodeURIComponent(\n      symbol,\n    )}?range=${encodeURIComponent(range)}&interval=${encodeURIComponent(interval)}&includePrePost=false&events=div%2Csplit`\n\n    const resp = await fetch(yf, { headers: { 'user-agent': 'Mozilla/5.0' } })\n    const text = await resp.text()\n    return new Response(text, { status: resp.status, headers: { 'content-type': 'application/json' } })\n  } catch (e) {\n    return new Response(JSON.stringify({ error: 'chart_fetch_error' }), {\n      status: 500,\n      headers: { 'content-type': 'application/json' },\n    })\n  }\n}\n\n\n", "import { onRequestPost as __api_ai_ts_onRequestPost } from \"/Users/shashi/Code/TickerSugession/web/functions/api/ai.ts\"\nimport { onRequestGet as __api_chart_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/chart.ts\"\nimport { onRequestGet as __api_ipos_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/ipos.ts\"\nimport { onRequestGet as __api_news_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/news.ts\"\nimport { onRequestGet as __api_quote_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/quote.ts\"\nimport { onRequestGet as __api_read_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/read.ts\"\nimport { onRequestGet as __api_screener_saved_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/screener-saved.ts\"\nimport { onRequestGet as __api_trending_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/api/trending.ts\"\nimport { onRequestPost as __ai_ts_onRequestPost } from \"/Users/shashi/Code/TickerSugession/web/functions/ai.ts\"\nimport { onRequestGet as __chart_ts_onRequestGet } from \"/Users/shashi/Code/TickerSugession/web/functions/chart.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/ai\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_ai_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/chart\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_chart_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/ipos\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_ipos_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/news\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_news_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/quote\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_quote_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/read\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_read_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/screener-saved\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_screener_saved_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/trending\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_trending_ts_onRequestGet],\n    },\n  {\n      routePath: \"/ai\",\n      mountPath: \"/\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__ai_ts_onRequestPost],\n    },\n  {\n      routePath: \"/chart\",\n      mountPath: \"/\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__chart_ts_onRequestGet],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/bundle-XNDw0E/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/bundle-XNDw0E/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/bundle-XNDw0E/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/pages-Z5DQ4K/functionsWorker-0.008736202404062143.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/pages-Z5DQ4K/functionsWorker-0.008736202404062143.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/bundle-jzTFfC/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/shashi/Code/TickerSugession/web/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/bundle-jzTFfC/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/shashi/Code/TickerSugession/web/.wrangler/tmp/bundle-jzTFfC/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["__name", "onRequestGet", "value", "_a", "result", "char", "prefix", "i", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
